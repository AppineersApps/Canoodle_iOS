//
//  HomeWorker.swift
//  WhiteLabelApp
//
//  Created by hb on 18/09/19.
//  Copyright (c) 2019 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

/// Class for Home API Calls
class HomeWorker {
  /// Make API Calls
    func getUsers(request: User.Request, completionHandler: @escaping ([User.ViewModel]?, _ message: String?, _ successCode: String?) -> Void) {
        NetworkService.updateDataRequest(with: UserAPIRouter.getUsers(request: request), showHud: true) { (responce: WSResponse<User.ViewModel>?, error: NetworkError?) in
            if let detail = responce {
                if let data = detail.arrayData, let success = detail.setting?.isSuccess, let msg = detail.setting?.message, success {
                    completionHandler(data, msg, detail.setting?.success)
                } else {
                    completionHandler(nil, detail.setting?.message, detail.setting?.success)
                }
            } else {
                completionHandler(nil, error?.erroMessage() ?? AlertMessage.defaultError, "0")
            }
        }
    }
    
    func setConnection(request: SetConnection.Request, completionHandler: @escaping ( _ message: String?, _ successCode: String?) -> Void) {
        NetworkService.dataRequest(with: SetConnectionAPIRouter.setConnection(request: request)) { (responce: WSResponse<SetConnection.Response>?, error: NetworkError?) in
            if let detail = responce {
                if  detail.arrayData != nil, let success = detail.setting?.isSuccess, let msg = detail.setting?.message, success {
                    completionHandler( msg, detail.setting?.success)
                } else {
                    completionHandler(detail.setting?.message, detail.setting?.success)
                }
            } else {
                completionHandler(error?.erroMessage(), "0")
            }
        }
    }
}

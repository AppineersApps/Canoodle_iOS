//
//  NotificationsInteractor.swift
//  MadCollab
//
//  Created by Appineers India on 28/04/20.
//  Copyright (c) 2020 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NotificationsBusinessLogic
{
    func getNotifications()
    func deleteNotification(request: Notifications.Request)
}

protocol NotificationsDataStore
{
  //var name: String { get set }
}

class NotificationsInteractor: NotificationsBusinessLogic, NotificationsDataStore
{
  var presenter: NotificationsPresentationLogic?
  var worker: NotificationsWorker?
  //var name: String = ""
  
  // MARK: Do something
    func getNotifications() {
        worker = NotificationsWorker()
        worker?.getNotifications(completionHandler: { (response, message, success) in
            self.presenter?.presentNotificationsResponse(response: response, message: message ?? "", successCode: success ?? "0")
        })
    }
    
    func deleteNotification(request: Notifications.Request)
    {
      worker = NotificationsWorker()
      worker?.deleteNotification(request: request, completionHandler: { (message, success) in
          self.presenter?.presentDeleteNotificationResponse(message: message ?? "", successCode: success ?? "0")
      })
    }

}

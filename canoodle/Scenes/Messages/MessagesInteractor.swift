//
//  MessagesInteractor.swift
//  WhiteLabelApp
//
//  Created by hb on 25/09/19.
//  Copyright (c) 2019 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

/// Protocol Messages API
protocol MessagesBusinessLogic {
    func getMessages()
    func deleteMessage(messageId: String)
}

/// Messages Data Store
protocol MessagesDataStore {
    
}

/// Class for Messages Interactor
class MessagesInteractor: MessagesBusinessLogic, MessagesDataStore {
    /// Presentor instance
    var presenter: MessagesPresentationLogic?
    /// Worker instance
    var worker: MessagesWorker?
    
    func getMessages() {
        worker = MessagesWorker()
        worker?.getMessages(completionHandler: { (response, message, success) in
            self.presenter?.presentGetMessagesResponse(response: response, message: message ?? "", successCode: success ?? "0")
        })
    }
    
    func deleteMessage(messageId: String) {
        worker = MessagesWorker()
        worker?.deleteMessage(messageId: messageId) { response in
            self.presenter?.presentDeleteMessageResponse(response: response)
        }
      }
}

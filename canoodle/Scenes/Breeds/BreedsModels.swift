//
//  BreedsModels.swift
//  MadCollab
//
//  Created by Appineers India on 29/04/20.
//  Copyright (c) 2020 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum Breeds
{
  // MARK: Use cases
    struct Request {
    }
    
    class ViewModel: WSResponseData {
        var breedId : String?
        var breedName : String?
        var breedImage : String?
        
        private enum CodingKeys: String, CodingKey {
            case breed_id
            case breed_name
            case breed_image
        }
        
        public override func encode(to encoder: Encoder) throws {
            try super.encode(to: encoder)
            var container = encoder.container(keyedBy: CodingKeys.self)
            try container.encode(breedId, forKey: .breed_id)
            try container.encode(breedName, forKey: .breed_name)
            try container.encode(breedImage, forKey: .breed_image)
        }
        
        required public init(from decoder: Decoder) throws {
            try super.init(from: decoder)
            let values = try decoder.container(keyedBy: CodingKeys.self)
            breedId = try values.decodeIfPresent(String.self, forKey: .breed_id)
            breedName = try values.decodeIfPresent(String.self, forKey: .breed_name)
            breedImage = try values.decodeIfPresent(String.self, forKey: .breed_image)
        }
    }
}

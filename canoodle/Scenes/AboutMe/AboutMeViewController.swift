//
//  AboutMeViewController.swift
//  MadCollab
//
//  Created by Appineers India on 07/09/20.
//  Copyright (c) 2020 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AboutMeDisplayLogic: class
{
}

class AboutMeViewController: UIViewController
{
    @IBOutlet weak var descTextView: UITextView!
    @IBOutlet weak var lblPlaceHolder: UILabel!
    @IBOutlet weak var lblDescriptionCharacterCount: UILabel!
    @IBOutlet weak var saveButton: UIButton!

    
  var interactor: AboutMeBusinessLogic?
  var router: (NSObjectProtocol & AboutMeRoutingLogic & AboutMeDataPassing)?
    
    var onboarding: Bool = false
    var aboutDescription: String!

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
    
    // MARK: Class Instance
    class func instance() -> AboutMeViewController? {
        return StoryBoard.AboutMe.board.instantiateViewController(withIdentifier: AppClass.AboutMeVC.rawValue) as? AboutMeViewController
    }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = AboutMeInteractor()
    let presenter = AboutMePresenter()
    let router = AboutMeRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    self.navigationItem.title = "About Me"
    descTextView.layer.borderColor = UIColor.lightGray.cgColor
    descTextView.layer.borderWidth = 1.0
    descTextView.layer.cornerRadius = 16.0
    descTextView.text = aboutDescription
    lblPlaceHolder.isHidden = !descTextView.text.isEmpty
    self.lblDescriptionCharacterCount.text = "(\(descTextView.text.count)/1000)"
    if(onboarding) {
        self.navigationItem.leftBarButtonItem = nil
    }
  }
  
  // MARK: Do something
  
   @IBAction func btnSaveAction(_ sender: Any) {

    }
    
    @objc func doneButtonClicked(_ sender: Any) {
       // descTextView.layer.borderColor = UIColor.clear.cgColor
        //lblDescriptionCharacterCount.isHidden = true
        lblPlaceHolder.isHidden = !descTextView.text.isEmpty
    }
    
    @IBAction func btnCancelAction(_ sender: Any) {
        self.displayAlert(msg: "Are you sure you want to Cancel? You will lose all changes", ok: "YES", cancel: "NO", okAction: {
            self.navigationController?.popViewController(animated: true)
        }, cancelAction: nil)
    }
}

//UITextView delegate
extension AboutMeViewController: UITextViewDelegate {
    
    func textViewDidBeginEditing(_ textView: UITextView) {
        //self.lblDescriptionCharacterCount.isHidden = false
        lblPlaceHolder.isHidden = !textView.text.isEmpty
        if textView.text.count > 1000 {
            var str = textView.text ?? ""
            str = String(str.prefix(1000))
            self.descTextView.text = str
        }
    }
    
    /// Method is called when textview text changes
    ///
    /// - Parameter textView: TextView
    func textViewDidChange(_ textView: UITextView) {
        lblPlaceHolder.isHidden = !textView.text.isEmpty
        textView.layer.borderColor = UIColor.lightGray.cgColor
        textView.layer.borderWidth = 1.0
        textView.layer.cornerRadius = 16.0
        if textView.text.count > 1000 {
            var str = textView.text ?? ""
            str = String(str.prefix(1000))
            self.descTextView.text = str
        }
        self.lblDescriptionCharacterCount.text = "(\(textView.text.count)/1000)"
    }
}

/// Protocol for presenting response
extension AboutMeViewController : AboutMeDisplayLogic {

}

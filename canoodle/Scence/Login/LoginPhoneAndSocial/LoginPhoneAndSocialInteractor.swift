//
//  LoginPhoneAndSocialInteractor.swift
//  WhiteLabelApp
//
//  Created by hb on 16/09/19.
//  Copyright (c) 2019 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

/// Protocol for Login Phone Social API
protocol LoginPhoneAndSocialBusinessLogic {
    /// Call Login with phone API
    ///
    /// - Parameter request: Login Phone Social Request
    func loginWithPhone(request: LoginPhoneAndSocialModel.Request)
    /// Call Social Login API
    ///
    /// - Parameter request: Login Phone Social Request
    func socialLogin(request: LoginPhoneAndSocialModel.SocialRequest)
}

/// Protocol for Login Phone Social Data Store
protocol LoginPhoneAndSocialDataStore {
    
}

/// Class for Login Phone Social Interactor
class LoginPhoneAndSocialInteractor: LoginPhoneAndSocialBusinessLogic, LoginPhoneAndSocialDataStore {
    /// Presentor instance
    var presenter: LoginPhoneAndSocialPresentationLogic?
    /// Worker instance
    var worker: LoginPhoneAndSocialWorker?
    
    /// Call Login with phone API
    ///
    /// - Parameter request: Login Phone Social Request
    func loginWithPhone(request: LoginPhoneAndSocialModel.Request) {
        worker = LoginPhoneAndSocialWorker()
        worker?.login(request: request, completionHandler: { (response, message, success) in
            self.presenter?.presentLoginResponse(response: response, message: message ?? "", success: success ?? "0")
        })
    }
    
    /// Call Social Login API
    ///
    /// - Parameter request: Login Phone Social Request
    func socialLogin(request: LoginPhoneAndSocialModel.SocialRequest) {
        worker = LoginPhoneAndSocialWorker()
        worker?.socialLogin(request: request, completionHandler: { (response, message, success) in
            self.presenter?.presentSocialLoginResponse(response: response, message: message ?? "", success: success ?? "0")
        })
    }
}

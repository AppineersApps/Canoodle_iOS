//
//  BlockedUserInteractor.swift
//  Time2Beat
//
//  Created by Appineers India on 17/09/20.
//  Copyright (c) 2020 The Appineers. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BlockedUserBusinessLogic
{
    func getBlockedUsers(request: Connection.Request)
    func unblockUser(request: BlockUser.Request)
}

protocol BlockedUserDataStore
{
  //var name: String { get set }
}

class BlockedUserInteractor: BlockedUserBusinessLogic, BlockedUserDataStore
{
  var presenter: BlockedUserPresentationLogic?
  var worker: BlockedUserWorker?
  //var name: String = ""
  
  // MARK: Do something
  
  func getBlockedUsers(request: Connection.Request) {
      worker = BlockedUserWorker()
      worker?.blockedUsers(request: request, completionHandler: { (response, message, success) in
          self.presenter?.presentBlockedUsersResponse(response: response, message: message ?? "", successCode: success ?? "0")
      })
  }
    
    func unblockUser(request: BlockUser.Request)
    {
      worker = BlockedUserWorker()
      worker?.unblockUser(request: request, completionHandler: { (message, success) in
          self.presenter?.presentUnblockUserResponse(message: message ?? "", successCode: success ?? "0")
      })
    }
}
